<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC5" version="1.0.3" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.2" timelimit="2000" steplimit="0" memlimit="5000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="counter_lock_alt.mlw"/>
<theory name="CounterImpl" proved="true">
 <goal name="refn&#39;vc" expl="VC for refn" proved="true">
 <proof prover="2"><result status="valid" time="0.005557" steps="4"/></proof>
 </goal>
 <goal name="initWorld&#39;vc" expl="VC for initWorld" proved="true">
 <proof prover="2"><result status="valid" time="0.012327" steps="144"/></proof>
 </goal>
 <goal name="step_Zero&#39;vc" expl="VC for step_Zero" proved="true">
 <proof prover="0"><result status="valid" time="0.213012" steps="49855"/></proof>
 </goal>
 <goal name="step_One&#39;vc" expl="VC for step_One" proved="true">
 <proof prover="0"><result status="valid" time="0.200333" steps="47502"/></proof>
 </goal>
 <goal name="step_Two&#39;vc" expl="VC for step_Two" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="step_Two&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.014187" steps="275"/></proof>
  </goal>
  <goal name="step_Two&#39;vc.1" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="step_Two&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="step_Two&#39;vc.1.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.083068" steps="40276"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="step_Three&#39;vc" expl="VC for step_Three" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.812244" steps="109853"/></proof>
 </goal>
 <goal name="Refinement.initWorldA&#39;refn&#39;vc" expl="VC for initWorldA&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.006511" steps="39"/></proof>
 </goal>
 <goal name="Refinement.initWorldC&#39;refn&#39;vc" expl="VC for initWorldC&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.004603" steps="4"/></proof>
 </goal>
 <goal name="Refinement.stepA&#39;refn&#39;vc" expl="VC for stepA&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.006211" steps="29"/></proof>
 </goal>
 <goal name="Refinement.stepC&#39;refn&#39;vc" expl="VC for stepC&#39;refn" proved="true">
 <proof prover="2"><result status="valid" time="0.016647" steps="250"/></proof>
 </goal>
 <goal name="safety_by_refinement" proved="true">
 <proof prover="2"><result status="valid" time="0.005979" steps="8"/></proof>
 </goal>
 <goal name="correctness" proved="true">
 <proof prover="0" timelimit="2000" memlimit="5000"><result status="valid" time="0.106235" steps="29994"/></proof>
 </goal>
</theory>
</file>
</why3session>
